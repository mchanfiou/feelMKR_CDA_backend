name: Backend CI/CD

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  lint-and-test:
    name: Lint & Test Backend
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: feelmkr
          POSTGRES_USER: mouss
          POSTGRES_PASSWORD: root
        ports:
          - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.2'
          cache: 'pip'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
            path: ~/.cache/pip
            key: setup-python-${{ runner.os }}-python-${{ matrix.python-version }}-pip-${{ hashFiles('requirements.txt') }}
            restore-keys: setup-python-${{ runner.os }}-python-${{ matrix.python-version }}-pip-

      - name: Install dependencies
        run: |
          pip install -r feelmkr/requirements.txt
      - name: Format with black
        run: |
          black .
      
      - name: Organize imports with isort
        run: |
          isort .

      - name: Lint & Format Check
        run: |
          flake8 feelmkr --ignore=E501,F401,F841

      - name: Run pytest
        run: |
          cd feelmkr/feelMKRBackend pytest --cov feelMKRBackend

  build-and-push:
    name: Build and Push Docker Image
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DEPLOY_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/mchanfiou/feelmkr_cda_backend:latest -f feelmkr/Dockerfile .

      - name: Push Docker image
        run: |
          docker push ghcr.io/mchanfiou/feelmkr_cda_backend:latest

  deploy:
    name: Deploy to Render
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render Deploy
        run: |
            curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }} \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -d '{
                "image": "ghcr.io/mchanfiou/feelmkr_cda_backend:latest"
            }'
